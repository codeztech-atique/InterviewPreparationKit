Component Did Mount - 

The componentDidMount lifecycle method in React is called after a component has been rendered to the DOM for the first time. 
It is part of the Mounting phase and is often used to perform actions that require interaction with the browser or external services. 
The primary purpose of componentDidMount is to handle side effects that should occur after the initial render.

Purpose of componentDidMount:

1.  Fetching Data:

componentDidMount() {
  // Fetch data from an API
  fetch('https://api.example.com/data')
    .then(response => response.json())
    .then(data => {
      // Update component state with fetched data
      this.setState({ data, loading: false });
    })
    .catch(error => {
      // Handle error
      console.error('Error fetching data:', error);
      this.setState({ loading: false, error: true });
    });
}

2. Setting Up Subscriptions:

componentDidMount() {
  // Subscribe to a real-time data stream
  this.subscription = dataStream.subscribe(data => {
    // Update component state or perform other actions
    this.setState({ realtimeData: data });
  });
}


3. Manually Changing the DOM: 

componentDidMount() {
  // Initialize a chart library
  const chart = new Chart(document.getElementById('myChart'), {
    // Chart configuration
  });
}


4. Setting Up Timers:

componentDidMount() {
  // Set up a timer to fetch updates every 5 seconds
  this.timerID = setInterval(() => {
    this.fetchUpdates();
  }, 5000);
}


5. Perform 1 time intialization - 

componentDidMount() {
  // One-time initialization
  console.log('Component has mounted.');
}
